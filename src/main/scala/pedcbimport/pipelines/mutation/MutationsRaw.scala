package pedcbimport.pipelines.mutation

import pedcbimport.pipelines.common.Wrapper._

// ===========================================================================
case class RawSampleMafRow(
  `Hugo_Symbol`                : HugoGeneSymbol,
  `Entrez_Gene_Id`             : EntrezGeneId,
  `Center`                     : String,
  `NCBI_Build`                 : String,
  `Chromosome`                 : Chromosome,
  `Start_Position`             : StartPosition,
  `End_Position`               : String,
  `Strand`                     : String,
  `Variant_Classification`     : String,
  `Variant_Type`               : String,
  `Reference_Allele`           : String,
  `Tumor_Seq_Allele1`          : String,
  `Tumor_Seq_Allele2`          : String,
  `dbSNP_RS`                   : String,
  `dbSNP_Val_Status`           : String,
  `Tumor_Sample_Barcode`       : String,
  `Matched_Norm_Sample_Barcode`: String,
  `Match_Norm_Seq_Allele1`     : String,
  `Match_Norm_Seq_Allele2`     : String,
  `Tumor_Validation_Allele1`   : String,
  `Tumor_Validation_Allele2`   : String,
  `Match_Norm_Validation_Allele1`: String,
  `Match_Norm_Validation_Allele2`: String,
  `Verification_Status`        : String,
  `Validation_Status`          : String,
  `Mutation_Status`            : String,
  `Sequencing_Phase`           : String,
  `Sequence_Source`            : String,
  `Validation_Method`          : String,
  `Score`                      : String,
  `BAM_File`                   : String,
  `Sequencer`                  : String,
  `Tumor_Sample_UUID`          : String,
  `Matched_Norm_Sample_UUID`   : String,
  `HGVSc`                      : String,
  `HGVSp`                      : String,
  `HGVSp_Short`                : String,
  `Transcript_ID`              : String,
  `Exon_Number`                : String,
  `t_depth`                    : String,
  `t_ref_count`                : String,
  `t_alt_count`                : String,
  `n_depth`                    : String,
  `n_ref_count`                : String,
  `n_alt_count`                : String,
  `all_effects`                : String,
  `Allele`                     : String,
  `Gene`                       : String,
  `Feature`                    : String,
  `Feature_type`               : String,
  `Consequence`                : String,
  `cDNA_position`              : String,
  `CDS_position`               : String,
  `Protein_position`           : String,
  `Amino_acids`                : String,
  `Codons`                     : String,
  `Existing_variation`         : String,
  `ALLELE_NUM`                 : String,
  `DISTANCE`                   : String,
  `STRAND`                     : String,
  `SYMBOL`                     : String,
  `SYMBOL_SOURCE`              : String,
  `HGNC_ID`                    : String,
  `BIOTYPE`                    : String,
  `CANONICAL`                  : String,
  `CCDS`                       : String,
  `ENSP`                       : String,
  `SWISSPROT`                  : String,
  `TREMBL`                     : String,
  `UNIPARC`                    : String,
  `RefSeq`                     : String,
  `SIFT`                       : String,
  `PolyPhen`                   : String,
  `EXON`                       : String,
  `INTRON`                     : String,
  `DOMAINS`                    : String,
  `GMAF`                       : String,
  `AFR_MAF`                    : String,
  `AMR_MAF`                    : String,
  `ASN_MAF`                    : String,
  `EAS_MAF`                    : String,
  `EUR_MAF`                    : String,
  `SAS_MAF`                    : String,
  `AA_MAF`                     : String,
  `EA_MAF`                     : String,
  `CLIN_SIG`                   : String,
  `SOMATIC`                    : String,
  `PUBMED`                     : String,
  `MOTIF_NAME`                 : String,
  `MOTIF_POS`                  : String,
  `HIGH_INF_POS`               : String,
  `MOTIF_SCORE_CHANGE`         : String,
  `IMPACT`                     : String,
  `PICK`                       : String,
  `VARIANT_CLASS`              : String,
  `TSL`                        : String,
  `HGVS_OFFSET`                : String,
  `PHENO`                      : String,
  `MINIMISED`                  : String,
  `ExAC_AF`                    : String,
  `ExAC_AF_AFR`                : String,
  `ExAC_AF_AMR`                : String,
  `ExAC_AF_EAS`                : String,
  `ExAC_AF_FIN`                : String,
  `ExAC_AF_NFE`                : String,
  `ExAC_AF_OTH`                : String,
  `ExAC_AF_SAS`                : String,
  `GENE_PHENO`                 : String,
  `FILTER`                     : String)
  
// ---------------------------------------------------------------------------
object RawSampleMafRow {
  
  // TODO: sanity checks on input!!
  def apply(it: Iterator[String]): RawSampleMafRow =
    RawSampleMafRow(
      `Hugo_Symbol`                  = /* 1 */ HugoGeneSymbol(it.next()),
      `Entrez_Gene_Id`               = /* 2 */ EntrezGeneId(it.next()),
      `Center`                       = /* 3 */ it.next(),
      `NCBI_Build`                   = /* 4 */ it.next(),
      `Chromosome`                   = /* 5 */ Chromosome(it.next()),
      `Start_Position`               = /* 6 */ StartPosition(it.next().toInt),
      `End_Position`                 = it.next(),
      `Strand`                       = it.next(),
      `Variant_Classification`       = it.next(),
      `Variant_Type`                 = it.next(),
      `Reference_Allele`             = it.next(),
      `Tumor_Seq_Allele1`            = it.next(),
      `Tumor_Seq_Allele2`            = it.next(),
      `dbSNP_RS`                     = it.next(),
      `dbSNP_Val_Status`             = it.next(),
      `Tumor_Sample_Barcode`         = it.next(),
      `Matched_Norm_Sample_Barcode`  = it.next(),
      `Match_Norm_Seq_Allele1`       = it.next(),
      `Match_Norm_Seq_Allele2`       = it.next(),
      `Tumor_Validation_Allele1`     = it.next(),
      `Tumor_Validation_Allele2`     = it.next(),
      `Match_Norm_Validation_Allele1`= it.next(),
      `Match_Norm_Validation_Allele2`= it.next(),
      `Verification_Status`          = it.next(),
      `Validation_Status`            = it.next(),
      `Mutation_Status`              = it.next(),
      `Sequencing_Phase`             = it.next(),
      `Sequence_Source`              = it.next(),
      `Validation_Method`            = it.next(),
      `Score`                        = it.next(),
      `BAM_File`                     = it.next(),
      `Sequencer`                    = it.next(),
      `Tumor_Sample_UUID`            = it.next(),
      `Matched_Norm_Sample_UUID`     = it.next(),
      `HGVSc`                        = it.next(),
      `HGVSp`                        = it.next(),
      `HGVSp_Short`                  = it.next(),
      `Transcript_ID`                = it.next(),
      `Exon_Number`                  = it.next(),
      `t_depth`                      = it.next(),
      `t_ref_count`                  = it.next(),
      `t_alt_count`                  = it.next(),
      `n_depth`                      = it.next(),
      `n_ref_count`                  = it.next(),
      `n_alt_count`                  = it.next(),
      `all_effects`                  = it.next(),
      `Allele`                       = it.next(),
      `Gene`                         = it.next(),
      `Feature`                      = it.next(),
      `Feature_type`                 = it.next(),
      `Consequence`                  = it.next(),
      `cDNA_position`                = it.next(),
      `CDS_position`                 = it.next(),
      `Protein_position`             = it.next(),
      `Amino_acids`                  = it.next(),
      `Codons`                       = it.next(),
      `Existing_variation`           = it.next(),
      `ALLELE_NUM`                   = it.next(),
      `DISTANCE`                     = it.next(),
      `STRAND`                       = it.next(),
      `SYMBOL`                       = it.next(),
      `SYMBOL_SOURCE`                = it.next(),
      `HGNC_ID`                      = it.next(),
      `BIOTYPE`                      = it.next(),
      `CANONICAL`                    = it.next(),
      `CCDS`                         = it.next(),
      `ENSP`                         = it.next(),
      `SWISSPROT`                    = it.next(),
      `TREMBL`                       = it.next(),
      `UNIPARC`                      = it.next(),
      `RefSeq`                       = it.next(),
      `SIFT`                         = it.next(),
      `PolyPhen`                     = it.next(),
      `EXON`                         = it.next(),
      `INTRON`                       = it.next(),
      `DOMAINS`                      = it.next(),
      `GMAF`                         = it.next(),
      `AFR_MAF`                      = it.next(),
      `AMR_MAF`                      = it.next(),
      `ASN_MAF`                      = it.next(),
      `EAS_MAF`                      = it.next(),
      `EUR_MAF`                      = it.next(),
      `SAS_MAF`                      = it.next(),
      `AA_MAF`                       = it.next(),
      `EA_MAF`                       = it.next(),
      `CLIN_SIG`                     = it.next(),
      `SOMATIC`                      = it.next(),
      `PUBMED`                       = it.next(),
      `MOTIF_NAME`                   = it.next(),
      `MOTIF_POS`                    = it.next(),
      `HIGH_INF_POS`                 = it.next(),
      `MOTIF_SCORE_CHANGE`           = it.next(),
      `IMPACT`                       = it.next(),
      `PICK`                         = it.next(),
      `VARIANT_CLASS`                = it.next(),
      `TSL`                          = it.next(),
      `HGVS_OFFSET`                  = it.next(),
      `PHENO`                        = it.next(),
      `MINIMISED`                    = it.next(),
      `ExAC_AF`                      = it.next(),
      `ExAC_AF_AFR`                  = it.next(),
      `ExAC_AF_AMR`                  = it.next(),
      `ExAC_AF_EAS`                  = it.next(),
      `ExAC_AF_FIN`                  = it.next(),
      `ExAC_AF_NFE`                  = it.next(),
      `ExAC_AF_OTH`                  = it.next(),
      `ExAC_AF_SAS`                  = it.next(),
      `GENE_PHENO`                   = it.next(),
      `FILTER`                       = it.next())
      
}

// ===========================================================================
